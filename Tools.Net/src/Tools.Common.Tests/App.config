<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="Dsi.Common.RegexLibrary" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <sectionGroup name="spring">
      <section name="context"
               type="Spring.Context.Support.ContextHandler,
                     Spring.Core" />
      <section name="objects"
               type="Spring.Context.Support.DefaultSectionHandler,
                     Spring.Core" />
    </sectionGroup>
<section name="testNameValueSection" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
	<section name="Dsi.StringCryptoTransformer" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
	<section name="Dsi.EncryptionTokenProvider" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
	<section name="Dsi.TokenDateTimeVerifier" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  </configSections>
	<testNameValueSection>
		<add key="testKey" value="testValue" />
	</testNameValueSection>
	<Dsi.StringCryptoTransformer>
		<add key="key" value="fNDSOCzb9Fmq/75qvNWrjRwrl26KL0bAovhwPtM3CtU=" />
		<add key="iv" value="MKdGXAXzd+Y1l9SNPPvBgA==" />
	</Dsi.StringCryptoTransformer>
	<Dsi.EncryptionTokenProvider>
		<add key="saltPhrase" value="skakal pes pres oves" />
	</Dsi.EncryptionTokenProvider>
	<Dsi.TokenDateTimeVerifier>
		<add key="timeWindowSeconds" value="100" />
	</Dsi.TokenDateTimeVerifier>	
  <system.diagnostics>
    <sources>
      <source name="Tools.Logging" switchValue="Verbose">
        <listeners>
          <add name="IoCDBLogger">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="TestOfIoCXmlRollingWriter" switchValue="Verbose">
        <listeners>
          <add name="IoCXmlLogger">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="IoCDBLogger" initializeData="DatabaseLogger"
       type="Tools.Logging.IoCWrapperTraceListener, Tools.Common"
       traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
      <add name="IoCXmlLogger" initializeData="XmlLogger"
       type="Tools.Logging.IoCWrapperTraceListener, Tools.Common"
       traceOutputOptions="Timestamp">
        <filter type="" />
      </add>      
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>
  <connectionStrings>
    <add name="LogDatabase" connectionString="Data Source=.\sqlexpress;Initial Catalog=AvonLog;Integrated Security=True"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <Dsi.Common.RegexLibrary>
    <add key="PasswordRegex" value="\A(?=[-_a-zA-Z0-9]*?[A-Z])(?=[-_a-zA-Z0-9]*?[a-z])(?=[-_a-zA-Z0-9]*?[0-9])\S{12,}\z" />
  </Dsi.Common.RegexLibrary>
  <spring>
    <context>
      <resource uri="config://spring/objects" />
    </context>
    <objects xmlns="http://www.springframework.net">
      <!-- Logging -->
      <object name="DatabaseLogger" type="Tools.Logging.DatabaseTraceListener2, Tools.Common"
        singleton="false">
        <constructor-arg name="connectionStringName" value="LogDatabase" />
        <constructor-arg name="storedProcedureName" value="uspInsertLogMessage" />
        <constructor-arg name="fallbackListener" ref="FallbackListener" />
        <constructor-arg name="extraLogDataTransformer">
          <value>null</value>
        </constructor-arg>
        <property name="Filter" ref="JobEventIdTraceFilter" />
      </object>
      <object name="JobEventIdTraceFilter"
        type="Tools.Logging.EventIdTraceFilter, Tools.Common">
        <constructor-arg name="eventIds">
          <list element-type="int">
            <value>1</value>
            <!-- Test event with id 1 -->
            <value>2</value>
            <!-- Test event with id 2 -->
          </list>
        </constructor-arg>
      </object>
      <object name="FallbackListener" type="Tools.Logging.XmlWriterRollingTraceListener, Tools.Common">
        <constructor-arg type="int" name="maxFileSizeBytes" value="2000000" />
        <constructor-arg name="logRootLocation" value="C:\logs\avon\" />
        <constructor-arg name="fileDatetimePattern" value="dd-MMM-yyTHH-mm-ss" />
        <constructor-arg name="fileStaticPattern" value="dblogfallback" />
        <constructor-arg name="name" value="XmlFallbackLogger" />
      </object>
      <!--<object name="ExtraLogDataTransformer"
              type="Avon.Esc.WS.Common.EscLogDataTransformer, Avon.Esc.WS.Common">
        <constructor-arg name="ipHeaderName" value="HTTP_CLIENT_IP" />
      </object>-->
      <object name="XmlLogger"
  type="Tools.Logging.XmlWriterRollingTraceListener, Tools.Common"
  singleton="false">
        <constructor-arg type="int" name="maxFileSizeBytes" value="2000000" />
        <constructor-arg name="logRootLocation" value="C:\logs\avon\" />
        <constructor-arg name="fileDatetimePattern" value="dd-MMM-yyTHH-mm-ss" />
        <constructor-arg name="fileStaticPattern" value="log_" />
        <constructor-arg name="name" value="XmlLogger" />
      </object>
      <!-- End of Logging -->  
    </objects>
  </spring>
</configuration>